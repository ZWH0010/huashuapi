"""
Django settings for dyliveapp project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(ctq@7tsanv-96u*76ju^s*uks#1ol59oq62yo^#qlv#e-pnh^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # 开发环境设置为 True

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '*']  # 开发环境允许所有主机


# Application definition

INSTALLED_APPS = [
    'simpleui',  # 添加simpleui主题
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',  # DRF
    'django_filters',  # 过滤器
    'corsheaders',  # CORS
    # 自定义应用
    'apps.users',
    'apps.scripts',
    'apps.tags',
    'apps.core',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.cache.UpdateCacheMiddleware',  # 缓存中间件移到这里
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware',  # 紧跟Common中间件
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'apps.core.middleware.analytics.UserAnalyticsMiddleware',
    # 添加自定义中间件，限制普通用户登录管理系统
    'apps.users.middleware.AdminLoginRestrictionMiddleware',
]

ROOT_URLCONF = 'dyliveapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'apps/templates'),
            os.path.join(BASE_DIR, 'templates'),  # 添加自定义模板目录
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dyliveapp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'dyliveapp',
        'USER': 'root',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '3306',
        'CONN_MAX_AGE': 60,  # 持久化连接60秒
        'CONN_HEALTH_CHECKS': True,  # 启用连接健康检查
        'OPTIONS': {
            'charset': 'utf8mb4',
            'init_command': """
                SET sql_mode='STRICT_TRANS_TABLES';
                SET GLOBAL max_connections = 1000;
                SET innodb_buffer_pool_size = 134217728;  # 128MB
                SET innodb_buffer_pool_instances = 4;
                SET innodb_read_io_threads = 4;
                SET innodb_write_io_threads = 4;
                SET innodb_flush_log_at_trx_commit = 2;
            """,
            'autocommit': True,
        }
    }
}

# 优化缓存配置
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
        'TIMEOUT': 300,  # 5分钟默认过期时间
        'OPTIONS': {
            'MAX_ENTRIES': 1000,  # 最大缓存条目数
            'CULL_FREQUENCY': 3,  # 清理频率
        }
    },
    'user_session': {  # 新增用户会话专用缓存
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'user-session',
        'TIMEOUT': 1800,  # 30分钟
        'OPTIONS': {
            'MAX_ENTRIES': 500,
            'CULL_FREQUENCY': 2,
        }
    }
}

# 会话配置优化
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
SESSION_CACHE_ALIAS = 'user_session'  # 使用专用缓存
SESSION_COOKIE_AGE = 1800  # 30分钟
SESSION_SAVE_EVERY_REQUEST = True  # 每次请求都更新会话

# 缓存设置
CACHE_MIDDLEWARE_ALIAS = 'default'
CACHE_MIDDLEWARE_SECONDS = 300  # 5分钟
CACHE_MIDDLEWARE_KEY_PREFIX = 'dyliveapp_cache'

# 视图缓存设置
CACHE_VIEW_TIMEOUT = 60  # 1分钟
CACHE_ANONYMOUS_TIMEOUT = 60  # 1分钟
CACHE_AUTHENTICATED_TIMEOUT = 300  # 5分钟

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8,
        }
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'apps/static')
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'apps/media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 指定自定义用户模型
AUTH_USER_MODEL = 'users.User'

# 认证相关配置
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

# REST framework 配置
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'EXCEPTION_HANDLER': 'rest_framework.views.exception_handler'
}

# JWT 配置
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
}

# CORS settings
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True

# SimpleUI Settings
SIMPLEUI_DEFAULT_THEME = 'admin.lte.css'
SIMPLEUI_LOGO = 'https://example.com/logo.png'  # 替换为实际的logo URL
SIMPLEUI_HOME_INFO = False
SIMPLEUI_ANALYSIS = False

# 增强密码哈希
PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
]

# 日志配置
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
        },
        'apps.users': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

# 用户行为分析设置
USER_ANALYTICS = {
    'RETENTION_DAYS': 30,  # 数据保留天数
    'CACHE_PREFIX': 'user_analytics:',  # 缓存键前缀
    'CACHE_TIMEOUT': 60 * 60 * 24,  # 缓存过期时间（秒）
    'TRACK_ANONYMOUS': False,  # 是否追踪匿名用户
    'TRACK_PATHS': [  # 需要追踪的路径
        r'^/api/',  # API路径
        r'^/admin/',  # 管理后台路径
    ],
    'IGNORE_PATHS': [  # 忽略的路径
        r'^/static/',
        r'^/media/',
        r'^/favicon.ico$',
    ],
}
